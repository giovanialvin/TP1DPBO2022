/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp1;

//import com.mysql.jdbc.Blob;
//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.Statement;
//import java.awt.BorderLayout;
import com.mysql.jdbc.Blob;
//import com.mysql.jdbc.Connection;
import java.sql.Connection;


import java.awt.Image;
import java.io.File;
//import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import java.sql.ResultSet;
import java.sql.Statement;
//import javax.swing.JLabel;
//import javax.xml.transform.Result;
//import java.sql.ResultSet;
//import java.sql.SQLException;



/**
 *
 * @author Alvin Giovani
 */

public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private Boolean authorMode = false;
    private String gambar = "";
    public static java.sql.Statement stm;
    dbConnection dbcon = new dbConnection();
    public Main() {
        initComponents();
        tempat_img.setVisible(false);
        tabel_output.setModel((TableModel) dbcon.readTable(authorMode));
//        setElementList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
//    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        BTN_submit = new javax.swing.JButton();
        TF_judul = new javax.swing.JTextField();
        lbl_author = new javax.swing.JLabel();
        BTN_buku = new javax.swing.JButton();
        BTN_author = new javax.swing.JButton();
        TF_deskripsi = new javax.swing.JTextField();
        BTN_img = new javax.swing.JButton();
        lbl_jdl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TF_author = new javax.swing.JTextField();
        lbl_deskripsi = new javax.swing.JLabel();
        PNL_output = new javax.swing.JPanel();
        PNL_card = new javax.swing.JPanel();
        lbl_outputjudul = new javax.swing.JLabel();
        lbl_outputauthor = new javax.swing.JLabel();
        lbl_outputdesc = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbl_imgoutput = new javax.swing.JLabel();
        output_judul = new javax.swing.JTextField();
        output_author = new javax.swing.JTextField();
        output_deskripsi = new javax.swing.JTextField();
        BTN_update = new javax.swing.JButton();
        BTN_delete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        PNL_tempatimage = new javax.swing.JPanel();
        tempat_img = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_output = new javax.swing.JTable();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BTN_submit.setText("Submit");
        BTN_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_submitActionPerformed(evt);
            }
        });

        lbl_author.setText("Author");

        BTN_buku.setText("Buku");
        BTN_buku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_bukuActionPerformed(evt);
            }
        });

        BTN_author.setText("Author");
        BTN_author.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BTN_author.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BTN_authorMouseClicked(evt);
            }
        });
        BTN_author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_authorActionPerformed(evt);
            }
        });

        BTN_img.setText("Add Image");
        BTN_img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_imgActionPerformed(evt);
            }
        });

        lbl_jdl.setText("Judul");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Sitka Small", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DATABASE BUKU");
        jLabel2.setToolTipText("");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setVerifyInputWhenFocusTarget(false);

        lbl_deskripsi.setText("Deskripsi");

        PNL_output.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        PNL_card.setBackground(new java.awt.Color(204, 204, 255));
        PNL_card.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PNL_card.setForeground(new java.awt.Color(204, 204, 255));

        lbl_outputjudul.setText("Judul");

        lbl_outputauthor.setText("Author");

        lbl_outputdesc.setText("Deskripsi");

        lbl_imgoutput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_imgoutput.setPreferredSize(new java.awt.Dimension(60, 80));

        BTN_update.setBackground(new java.awt.Color(51, 51, 255));
        BTN_update.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        BTN_update.setForeground(new java.awt.Color(255, 255, 255));
        BTN_update.setText("Update");
        BTN_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_updateActionPerformed(evt);
            }
        });

        BTN_delete.setBackground(new java.awt.Color(255, 51, 51));
        BTN_delete.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        BTN_delete.setForeground(new java.awt.Color(255, 255, 255));
        BTN_delete.setText("Delete");
        BTN_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PNL_cardLayout = new javax.swing.GroupLayout(PNL_card);
        PNL_card.setLayout(PNL_cardLayout);
        PNL_cardLayout.setHorizontalGroup(
            PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_cardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_imgoutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_outputdesc)
                    .addComponent(lbl_outputauthor)
                    .addComponent(lbl_outputjudul))
                .addGap(19, 19, 19)
                .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(output_judul)
                    .addComponent(output_author)
                    .addComponent(output_deskripsi)
                    .addGroup(PNL_cardLayout.createSequentialGroup()
                        .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(PNL_cardLayout.createSequentialGroup()
                                .addComponent(BTN_update, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTN_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PNL_cardLayout.setVerticalGroup(
            PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_cardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PNL_cardLayout.createSequentialGroup()
                        .addComponent(lbl_imgoutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PNL_cardLayout.createSequentialGroup()
                        .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_outputjudul)
                            .addComponent(output_judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_outputauthor)
                            .addComponent(output_author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_outputdesc)
                            .addComponent(output_deskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PNL_cardLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(PNL_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BTN_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BTN_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(17, 17, 17))))
        );

        javax.swing.GroupLayout PNL_outputLayout = new javax.swing.GroupLayout(PNL_output);
        PNL_output.setLayout(PNL_outputLayout);
        PNL_outputLayout.setHorizontalGroup(
            PNL_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_outputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PNL_card, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PNL_outputLayout.setVerticalGroup(
            PNL_outputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_outputLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(PNL_card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel1.setLayout(null);

        tempat_img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempat_img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tempat_img.setFocusable(false);
        tempat_img.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PNL_tempatimageLayout = new javax.swing.GroupLayout(PNL_tempatimage);
        PNL_tempatimage.setLayout(PNL_tempatimageLayout);
        PNL_tempatimageLayout.setHorizontalGroup(
            PNL_tempatimageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_tempatimageLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(tempat_img, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        PNL_tempatimageLayout.setVerticalGroup(
            PNL_tempatimageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_tempatimageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempat_img, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabel_output.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tabel_output.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabel_outputAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tabel_output.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_outputMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_output);
        if (tabel_output.getColumnModel().getColumnCount() > 0) {
            tabel_output.getColumnModel().getColumn(0).setPreferredWidth(5);
            tabel_output.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(PNL_tempatimage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(BTN_img)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BTN_submit))
                                .addComponent(BTN_buku)
                                .addComponent(BTN_author, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                                .addComponent(PNL_output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lbl_author, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbl_deskripsi)
                                        .addComponent(lbl_jdl, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(TF_judul, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                        .addComponent(TF_author, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TF_deskripsi, javax.swing.GroupLayout.Alignment.LEADING)))))))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_author)
                    .addComponent(BTN_buku))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PNL_tempatimage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TF_judul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_jdl))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_author))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_deskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_deskripsi))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTN_img)
                    .addComponent(BTN_submit))
                .addGap(34, 34, 34)
                .addComponent(PNL_output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_submitActionPerformed
        // TODO add your handling code here:
        if(authorMode == false){
            if(!TF_author.getText().isEmpty() && !TF_judul.getText().isEmpty() && !TF_deskripsi.getText().isEmpty() && !gambar.isEmpty()){
                //mengambil nilai dari text field
                String judul = TF_judul .getText();
                String author = TF_author.getText();
                String deskripsi = TF_deskripsi.getText();
                String image = gambar;
                
//              PreparedStatement pstmt = dbcon.prepareStatement;
                dbcon.Query("Insert into buku (img, judul, autor, deskripsi) values ('"+image+"', '"+judul+"', '"+author+"', '"+deskripsi+"')");
                TF_judul.setText("");
                TF_author.setText("");
                TF_deskripsi.setText("");
                tempat_img.setVisible(false);
                
                System.out.println("Insert Success");
                tabel_output.setModel((TableModel) dbcon.readTable(authorMode));

                
            }
            else{
                //jika data kosong, berikan notifkasi 
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
            }
        }
        else{
            if(!TF_author.getText().isEmpty() && !TF_judul.getText().isEmpty() && !TF_deskripsi.getText().isEmpty() && !gambar.isEmpty()){
                //mengambil nilai dari text field
                String judul = TF_judul .getText();
                String author = TF_author.getText();
                String deskripsi = TF_deskripsi.getText();
                String image = gambar;
                
//              PreparedStatement pstmt = dbcon.prepareStatement;
                dbcon.Query("Insert into author (img, nama, jml_buku, last_buku) values ('"+image+"', '"+judul+"', '"+author+"', '"+deskripsi+"')");
                TF_judul.setText("");
                TF_author.setText("");
                TF_deskripsi.setText("");
                tempat_img.setVisible(false);
                
                System.out.println("Insert Success");
                tabel_output.setModel((TableModel) dbcon.readTable(authorMode));

                
            }
            else{
                //jika data kosong, berikan notifkasi 
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong!");
            }
        }
    }//GEN-LAST:event_BTN_submitActionPerformed

    private void BTN_bukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_bukuActionPerformed
        // TODO add your handling code here:
        authorMode = false;
        lbl_jdl.setText("Judul");
        lbl_author.setText("Author");
        lbl_deskripsi.setText("Deskripsi");
        lbl_outputjudul.setText("Judul");
        lbl_outputauthor.setText("Author");
        lbl_outputdesc.setText("Deksripsi");
        output_judul.setText("");
        output_author.setText("");
        output_deskripsi.setText("");
        tabel_output.setModel((TableModel) dbcon.readTable(authorMode));
    }//GEN-LAST:event_BTN_bukuActionPerformed

    private void BTN_authorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BTN_authorMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_BTN_authorMouseClicked

    private void BTN_authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_authorActionPerformed
        // TODO add your handling code here:
        authorMode = true;
        lbl_jdl.setText("Nama");
        lbl_author.setText("Jumlah Buku");
        lbl_deskripsi.setText("Buku Terbaru");
        lbl_outputjudul.setText("Nama");
        lbl_outputauthor.setText("Jumlah Buku");
        lbl_outputdesc.setText("Buku Terbaru");
        output_judul.setText("");
        output_author.setText("");
        output_deskripsi.setText("");
        tabel_output.setModel((TableModel) dbcon.readTable(authorMode));
        
    }//GEN-LAST:event_BTN_authorActionPerformed

    private void BTN_imgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_imgActionPerformed
        // TODO add your handling code here
        //deklarasi jfile chooser
        JFileChooser jf = new JFileChooser();
        tempat_img.setVisible(true);
        int result = jf.showOpenDialog(null);
        //jika file chooser nya berjalan
        if(result == JFileChooser.APPROVE_OPTION){
            
            //deklarasi file yang diisi kan file yang dipilih
            File f = jf.getSelectedFile();
            
            //deklarasi image icon
            ImageIcon icon = new ImageIcon(f.toString());
            //mengatur ukuran image icon
            Image image = icon.getImage().getScaledInstance(tempat_img.getWidth(), tempat_img.getHeight(), Image.SCALE_SMOOTH);
            //memasukkan ukuran image icon ke variabel baru
            ImageIcon ic = new ImageIcon(image);
            //nasukkan gambar ke tempat yang sudah disediakan
            tempat_img.setIcon(ic);
            
            
            gambar = f.toString();
            
            
//          System.out.println(gambar);
            
//            tempat_img =  new JLabel("", new ImageIcon(gambar), JLabel.CENTER);
//            PNL_tempatimage.add(tempat_img, BorderLayout.CENTER);
//            
//            PNL_tempatimage.revalidate();
//            PNL_tempatimage.repaint();
            System.out.println("Add Image Success");
        }
    }//GEN-LAST:event_BTN_imgActionPerformed

    private void tabel_outputAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabel_outputAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel_outputAncestorAdded

    private void tabel_outputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_outputMouseClicked
        // TODO add your handling code here:
        output_judul.setText(tabel_output.getValueAt(tabel_output.getSelectedRow(), 1).toString());
        output_author.setText(tabel_output.getValueAt(tabel_output.getSelectedRow(), 2).toString());
        output_deskripsi.setText(tabel_output.getValueAt(tabel_output.getSelectedRow(), 3).toString());
//        tempat_img.setIcon(tabel_output.getValueAt(tabel_output.getSelectedRow(), 4).toString());
        
        
        ImageIcon icon = new ImageIcon(tabel_output.getValueAt(tabel_output.getSelectedRow(), 4).toString());
            //mengatur ukuran image icon
        Image image = icon.getImage().getScaledInstance(lbl_imgoutput.getWidth(), lbl_imgoutput.getHeight(), Image.SCALE_SMOOTH);
            //memasukkan ukuran image icon ke variabel baru
        ImageIcon ic = new ImageIcon(image);
            //nasukkan gambar ke tempat yang sudah disediakan
        lbl_imgoutput.setIcon(ic);
        
//        
//        int row = tabel_output.getSelectedRow();
//        String judul = (String) tabel_output.getValueAt(row, 1);
//        dbcon.Query("Select img from buku where judul = '"+judul+"'");
//        lbl_imgoutput.setIcon("");
//        asu = dbcon.connect();
//        PreparedStatment ps = dbcon.connect().get
          
//        File f = ();
//            
//            //deklarasi image icon
//        ImageIcon icon = new ImageIcon(f.toString());
//            //mengatur ukuran image icon
//        Image image = icon.getImage().getScaledInstance(tempat_img.getWidth(), tempat_img.getHeight(), Image.SCALE_SMOOTH);
//        //memasukkan ukuran image icon ke variabel baru
//        ImageIcon ic = new ImageIcon(image);
//            //nasukkan gambar ke tempat yang sudah disediakan
//        tempat_img.setIcon(ic);

//
//        ImageIcon icon = new ImageIcon(.toString());
//        //mengatur ukuran image icon
//        Image image = icon.getImage().getScaledInstance(lbl_imgoutput.getWidth(), lbl_imgoutput.getHeight(), Image.SCALE_SMOOTH);
//        ImageIcon tampilkan = new ImageIcon(gambar.getBytes(1, image));
//        lbl_imgoutput.setIcon(tampilkan);
        
    }//GEN-LAST:event_tabel_outputMouseClicked

    private void BTN_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_deleteActionPerformed
        // TODO add your handling code here:
        
        try
             {  
            String judul_temp = tabel_output.getValueAt(tabel_output.getSelectedRow(), 1).toString();
            //masukkan query yang sesuai
            if(authorMode == false){
                dbcon.Query("delete from buku where judul='"+judul_temp+"'");
            }
            else{
                authorMode = true;
                dbcon.Query("delete from author where nama='"+judul_temp+"'");
                
            }
            //membaca ulang tabel
            tabel_output.setModel(dbcon.readTable(authorMode));
            System.out.println(authorMode);
                
            System.out.println("Delete data berhasil");
                
            //mengatur text field menjadi kososng
            output_judul.setText("");
            output_author.setText("");
            output_deskripsi.setText("");
                
            //menyembunyikan kembali tombol delete
//          BTN_delete.setVisible(false);
                
            //mengatur text pada button submit
//          BTN_submit.setText("Submit");
                
            //notifikasi delete berhasil
            JOptionPane.showMessageDialog(null, "Delete Data Sukses");
        }
        catch (Exception e)
        {   
                //notifikasi delete gagal
            JOptionPane.showMessageDialog(null, "Delete Data Gagal");
        }
        
    }//GEN-LAST:event_BTN_deleteActionPerformed

    private void BTN_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_updateActionPerformed
        // TODO add your handling code here:
        try
             {  
            String judul_temp = tabel_output.getValueAt(tabel_output.getSelectedRow(), 1).toString();
            //masukkan query yang sesuai
            if(authorMode == false){
                dbcon.Query("update buku set judul = '"+output_judul.getText()+"', autor = '"+output_author.getText()+"', deskripsi = '"+output_deskripsi.getText()+"' where judul='"+judul_temp+"'");
            }
            else{
//                authorMode = true;
                dbcon.Query("update author set nama= '"+output_judul.getText()+"', jml_buku = '"+output_author.getText()+"', last_buku = '"+output_deskripsi.getText()+"' where nama='"+judul_temp+"'");                
            }
            //membaca ulang tabel
            tabel_output.setModel(dbcon.readTable(authorMode));
//            System.out.println(authorMode);
                
            System.out.println("Update data berhasil");
                
            //mengatur text field menjadi kososng
            output_judul.setText("");
            output_author.setText("");
            output_deskripsi.setText("");
                
            //menyembunyikan kembali tombol delete
//          BTN_delete.setVisible(false);
                
            //mengatur text pada button submit
//          BTN_submit.setText("Submit");
                
            //notifikasi delete berhasil
            JOptionPane.showMessageDialog(null, "Update Data Sukses");
        }
        catch (Exception e)
        {   
                //notifikasi delete gagal
            JOptionPane.showMessageDialog(null, "Update Data Gagal");
        }
    }//GEN-LAST:event_BTN_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_author;
    private javax.swing.JButton BTN_buku;
    private javax.swing.JButton BTN_delete;
    private javax.swing.JButton BTN_img;
    private javax.swing.JButton BTN_submit;
    private javax.swing.JButton BTN_update;
    private javax.swing.JPanel PNL_card;
    private javax.swing.JPanel PNL_output;
    private javax.swing.JPanel PNL_tempatimage;
    private javax.swing.JTextField TF_author;
    private javax.swing.JTextField TF_deskripsi;
    private javax.swing.JTextField TF_judul;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_author;
    private javax.swing.JLabel lbl_deskripsi;
    private javax.swing.JLabel lbl_imgoutput;
    private javax.swing.JLabel lbl_jdl;
    private javax.swing.JLabel lbl_outputauthor;
    private javax.swing.JLabel lbl_outputdesc;
    private javax.swing.JLabel lbl_outputjudul;
    private javax.swing.JTextField output_author;
    private javax.swing.JTextField output_deskripsi;
    private javax.swing.JTextField output_judul;
    private javax.swing.JTable tabel_output;
    private javax.swing.JLabel tempat_img;
    // End of variables declaration//GEN-END:variables

//    DefaultListModel listModel = new DefaultListModel();
}
